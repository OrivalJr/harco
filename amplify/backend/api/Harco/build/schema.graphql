type Condominios @aws_iam @aws_api_key {
  id: ID!
  nome: String!
  cnpj: String!
  endereco: String!
  bairro: String!
  ConvencoesRegulamentos(filter: ModelConvencoesRegulamentosFilterInput, sortDirection: ModelSortDirection, limit: Int, nextToken: String): ModelConvencoesRegulamentosConnection
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type ConvencoesRegulamentos @aws_iam @aws_api_key {
  id: ID!
  possuiconvencao: String!
  possuiregistro: String!
  dataregistro: AWSDate!
  cartorio: String!
  possuiregulamentointerno: String!
  condominiosID: ID
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
}

type DadosEstruturais @aws_iam @aws_api_key {
  id: ID!
  dataconstrucao: AWSDate!
  idadepredial: String!
  qtdunidades: String!
  qtdaptsresidenciais: String!
  qtdsalascomerciais: String!
  Condominios: Condominios
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
  _version: Int!
  _deleted: Boolean
  _lastChangedAt: AWSTimestamp!
  dadosEstruturaisCondominiosId: ID
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelSubscriptionStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  in: [String]
  notIn: [String]
}

input ModelSubscriptionIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  in: [Int]
  notIn: [Int]
}

input ModelSubscriptionFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  in: [Float]
  notIn: [Float]
}

input ModelSubscriptionBooleanInput {
  ne: Boolean
  eq: Boolean
}

input ModelSubscriptionIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  in: [ID]
  notIn: [ID]
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelCondominiosConnection @aws_api_key @aws_iam {
  items: [Condominios]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelCondominiosFilterInput {
  id: ModelIDInput
  nome: ModelStringInput
  cnpj: ModelStringInput
  endereco: ModelStringInput
  bairro: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelCondominiosFilterInput]
  or: [ModelCondominiosFilterInput]
  not: ModelCondominiosFilterInput
  _deleted: ModelBooleanInput
}

type Query {
  getCondominios(id: ID!): Condominios @aws_api_key @aws_iam
  listCondominios(filter: ModelCondominiosFilterInput, limit: Int, nextToken: String): ModelCondominiosConnection @aws_api_key @aws_iam
  syncCondominios(filter: ModelCondominiosFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelCondominiosConnection @aws_api_key @aws_iam
  getConvencoesRegulamentos(id: ID!): ConvencoesRegulamentos @aws_api_key @aws_iam
  listConvencoesRegulamentos(filter: ModelConvencoesRegulamentosFilterInput, limit: Int, nextToken: String): ModelConvencoesRegulamentosConnection @aws_api_key @aws_iam
  syncConvencoesRegulamentos(filter: ModelConvencoesRegulamentosFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelConvencoesRegulamentosConnection @aws_api_key @aws_iam
  convencoesRegulamentosByCondominiosID(condominiosID: ID!, sortDirection: ModelSortDirection, filter: ModelConvencoesRegulamentosFilterInput, limit: Int, nextToken: String): ModelConvencoesRegulamentosConnection @aws_api_key @aws_iam
  getDadosEstruturais(id: ID!): DadosEstruturais @aws_api_key @aws_iam
  listDadosEstruturais(filter: ModelDadosEstruturaisFilterInput, limit: Int, nextToken: String): ModelDadosEstruturaisConnection @aws_api_key @aws_iam
  syncDadosEstruturais(filter: ModelDadosEstruturaisFilterInput, limit: Int, nextToken: String, lastSync: AWSTimestamp): ModelDadosEstruturaisConnection @aws_api_key @aws_iam
}

input ModelCondominiosConditionInput {
  nome: ModelStringInput
  cnpj: ModelStringInput
  endereco: ModelStringInput
  bairro: ModelStringInput
  and: [ModelCondominiosConditionInput]
  or: [ModelCondominiosConditionInput]
  not: ModelCondominiosConditionInput
  _deleted: ModelBooleanInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateCondominiosInput {
  id: ID
  nome: String!
  cnpj: String!
  endereco: String!
  bairro: String!
  _version: Int
}

input UpdateCondominiosInput {
  id: ID!
  nome: String
  cnpj: String
  endereco: String
  bairro: String
  _version: Int
}

input DeleteCondominiosInput {
  id: ID!
  _version: Int
}

type Mutation {
  createCondominios(input: CreateCondominiosInput!, condition: ModelCondominiosConditionInput): Condominios @aws_api_key @aws_iam
  updateCondominios(input: UpdateCondominiosInput!, condition: ModelCondominiosConditionInput): Condominios @aws_api_key @aws_iam
  deleteCondominios(input: DeleteCondominiosInput!, condition: ModelCondominiosConditionInput): Condominios @aws_api_key @aws_iam
  createConvencoesRegulamentos(input: CreateConvencoesRegulamentosInput!, condition: ModelConvencoesRegulamentosConditionInput): ConvencoesRegulamentos @aws_api_key @aws_iam
  updateConvencoesRegulamentos(input: UpdateConvencoesRegulamentosInput!, condition: ModelConvencoesRegulamentosConditionInput): ConvencoesRegulamentos @aws_api_key @aws_iam
  deleteConvencoesRegulamentos(input: DeleteConvencoesRegulamentosInput!, condition: ModelConvencoesRegulamentosConditionInput): ConvencoesRegulamentos @aws_api_key @aws_iam
  createDadosEstruturais(input: CreateDadosEstruturaisInput!, condition: ModelDadosEstruturaisConditionInput): DadosEstruturais @aws_api_key @aws_iam
  updateDadosEstruturais(input: UpdateDadosEstruturaisInput!, condition: ModelDadosEstruturaisConditionInput): DadosEstruturais @aws_api_key @aws_iam
  deleteDadosEstruturais(input: DeleteDadosEstruturaisInput!, condition: ModelDadosEstruturaisConditionInput): DadosEstruturais @aws_api_key @aws_iam
}

input ModelSubscriptionCondominiosFilterInput {
  id: ModelSubscriptionIDInput
  nome: ModelSubscriptionStringInput
  cnpj: ModelSubscriptionStringInput
  endereco: ModelSubscriptionStringInput
  bairro: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionCondominiosFilterInput]
  or: [ModelSubscriptionCondominiosFilterInput]
  _deleted: ModelBooleanInput
}

type Subscription {
  onCreateCondominios(filter: ModelSubscriptionCondominiosFilterInput): Condominios @aws_subscribe(mutations: ["createCondominios"]) @aws_api_key @aws_iam
  onUpdateCondominios(filter: ModelSubscriptionCondominiosFilterInput): Condominios @aws_subscribe(mutations: ["updateCondominios"]) @aws_api_key @aws_iam
  onDeleteCondominios(filter: ModelSubscriptionCondominiosFilterInput): Condominios @aws_subscribe(mutations: ["deleteCondominios"]) @aws_api_key @aws_iam
  onCreateConvencoesRegulamentos(filter: ModelSubscriptionConvencoesRegulamentosFilterInput): ConvencoesRegulamentos @aws_subscribe(mutations: ["createConvencoesRegulamentos"]) @aws_api_key @aws_iam
  onUpdateConvencoesRegulamentos(filter: ModelSubscriptionConvencoesRegulamentosFilterInput): ConvencoesRegulamentos @aws_subscribe(mutations: ["updateConvencoesRegulamentos"]) @aws_api_key @aws_iam
  onDeleteConvencoesRegulamentos(filter: ModelSubscriptionConvencoesRegulamentosFilterInput): ConvencoesRegulamentos @aws_subscribe(mutations: ["deleteConvencoesRegulamentos"]) @aws_api_key @aws_iam
  onCreateDadosEstruturais(filter: ModelSubscriptionDadosEstruturaisFilterInput): DadosEstruturais @aws_subscribe(mutations: ["createDadosEstruturais"]) @aws_api_key @aws_iam
  onUpdateDadosEstruturais(filter: ModelSubscriptionDadosEstruturaisFilterInput): DadosEstruturais @aws_subscribe(mutations: ["updateDadosEstruturais"]) @aws_api_key @aws_iam
  onDeleteDadosEstruturais(filter: ModelSubscriptionDadosEstruturaisFilterInput): DadosEstruturais @aws_subscribe(mutations: ["deleteDadosEstruturais"]) @aws_api_key @aws_iam
}

type ModelConvencoesRegulamentosConnection @aws_iam @aws_api_key {
  items: [ConvencoesRegulamentos]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelConvencoesRegulamentosFilterInput {
  id: ModelIDInput
  possuiconvencao: ModelStringInput
  possuiregistro: ModelStringInput
  dataregistro: ModelStringInput
  cartorio: ModelStringInput
  possuiregulamentointerno: ModelStringInput
  condominiosID: ModelIDInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelConvencoesRegulamentosFilterInput]
  or: [ModelConvencoesRegulamentosFilterInput]
  not: ModelConvencoesRegulamentosFilterInput
  _deleted: ModelBooleanInput
}

input ModelConvencoesRegulamentosConditionInput {
  possuiconvencao: ModelStringInput
  possuiregistro: ModelStringInput
  dataregistro: ModelStringInput
  cartorio: ModelStringInput
  possuiregulamentointerno: ModelStringInput
  condominiosID: ModelIDInput
  and: [ModelConvencoesRegulamentosConditionInput]
  or: [ModelConvencoesRegulamentosConditionInput]
  not: ModelConvencoesRegulamentosConditionInput
  _deleted: ModelBooleanInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
}

input CreateConvencoesRegulamentosInput {
  id: ID
  possuiconvencao: String!
  possuiregistro: String!
  dataregistro: AWSDate!
  cartorio: String!
  possuiregulamentointerno: String!
  condominiosID: ID
  _version: Int
}

input UpdateConvencoesRegulamentosInput {
  id: ID!
  possuiconvencao: String
  possuiregistro: String
  dataregistro: AWSDate
  cartorio: String
  possuiregulamentointerno: String
  condominiosID: ID
  _version: Int
}

input DeleteConvencoesRegulamentosInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionConvencoesRegulamentosFilterInput {
  id: ModelSubscriptionIDInput
  possuiconvencao: ModelSubscriptionStringInput
  possuiregistro: ModelSubscriptionStringInput
  dataregistro: ModelSubscriptionStringInput
  cartorio: ModelSubscriptionStringInput
  possuiregulamentointerno: ModelSubscriptionStringInput
  condominiosID: ModelSubscriptionIDInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionConvencoesRegulamentosFilterInput]
  or: [ModelSubscriptionConvencoesRegulamentosFilterInput]
  _deleted: ModelBooleanInput
}

type ModelDadosEstruturaisConnection @aws_api_key @aws_iam {
  items: [DadosEstruturais]!
  nextToken: String
  startedAt: AWSTimestamp
}

input ModelDadosEstruturaisFilterInput {
  id: ModelIDInput
  dataconstrucao: ModelStringInput
  idadepredial: ModelStringInput
  qtdunidades: ModelStringInput
  qtdaptsresidenciais: ModelStringInput
  qtdsalascomerciais: ModelStringInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  and: [ModelDadosEstruturaisFilterInput]
  or: [ModelDadosEstruturaisFilterInput]
  not: ModelDadosEstruturaisFilterInput
  _deleted: ModelBooleanInput
  dadosEstruturaisCondominiosId: ModelIDInput
}

input ModelDadosEstruturaisConditionInput {
  dataconstrucao: ModelStringInput
  idadepredial: ModelStringInput
  qtdunidades: ModelStringInput
  qtdaptsresidenciais: ModelStringInput
  qtdsalascomerciais: ModelStringInput
  and: [ModelDadosEstruturaisConditionInput]
  or: [ModelDadosEstruturaisConditionInput]
  not: ModelDadosEstruturaisConditionInput
  _deleted: ModelBooleanInput
  createdAt: ModelStringInput
  updatedAt: ModelStringInput
  dadosEstruturaisCondominiosId: ModelIDInput
}

input CreateDadosEstruturaisInput {
  id: ID
  dataconstrucao: AWSDate!
  idadepredial: String!
  qtdunidades: String!
  qtdaptsresidenciais: String!
  qtdsalascomerciais: String!
  _version: Int
  dadosEstruturaisCondominiosId: ID
}

input UpdateDadosEstruturaisInput {
  id: ID!
  dataconstrucao: AWSDate
  idadepredial: String
  qtdunidades: String
  qtdaptsresidenciais: String
  qtdsalascomerciais: String
  _version: Int
  dadosEstruturaisCondominiosId: ID
}

input DeleteDadosEstruturaisInput {
  id: ID!
  _version: Int
}

input ModelSubscriptionDadosEstruturaisFilterInput {
  id: ModelSubscriptionIDInput
  dataconstrucao: ModelSubscriptionStringInput
  idadepredial: ModelSubscriptionStringInput
  qtdunidades: ModelSubscriptionStringInput
  qtdaptsresidenciais: ModelSubscriptionStringInput
  qtdsalascomerciais: ModelSubscriptionStringInput
  createdAt: ModelSubscriptionStringInput
  updatedAt: ModelSubscriptionStringInput
  and: [ModelSubscriptionDadosEstruturaisFilterInput]
  or: [ModelSubscriptionDadosEstruturaisFilterInput]
  _deleted: ModelBooleanInput
  dadosEstruturaisCondominiosId: ModelSubscriptionIDInput
}
