{
  "Parameters": {
    "DynamoDBModelTableReadIOPS": {
      "Type": "Number",
      "Default": 5,
      "Description": "The number of read IOPS the table should support."
    },
    "DynamoDBModelTableWriteIOPS": {
      "Type": "Number",
      "Default": 5,
      "Description": "The number of write IOPS the table should support."
    },
    "DynamoDBBillingMode": {
      "Type": "String",
      "Default": "PAY_PER_REQUEST",
      "AllowedValues": [
        "PAY_PER_REQUEST",
        "PROVISIONED"
      ],
      "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes."
    },
    "DynamoDBEnablePointInTimeRecovery": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether to enable Point in Time Recovery on the table."
    },
    "DynamoDBEnableServerSideEncryption": {
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enable server side encryption powered by KMS."
    },
    "referencetotransformerrootstackenv10C5A902Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiosauth0FunctionQuerygetCondominiosauth0FunctionAppSyncFunction02C717DAFunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackauthRoleNameFB872D50Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackunauthRoleName49F3C1FERef": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationcreateCondominiosinit0FunctionMutationcreateCondominiosinit0FunctionAppSyncFunction4898ECD0FunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationcreateCondominiosauth0FunctionMutationcreateCondominiosauth0FunctionAppSyncFunction3B2DF4CBFunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationupdateCondominiosinit0FunctionMutationupdateCondominiosinit0FunctionAppSyncFunction31BC2B04FunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptiononCreateCondominiosauth0FunctionSubscriptiononCreateCondominiosauth0FunctionAppSyncFunctionFCB34236FunctionId": {
      "Type": "String"
    },
    "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptionOnCreateCondominiosDataResolverFnSubscriptionOnCreateCondominiosDataResolverFnAppSyncFunctionA3249BCFFunctionId": {
      "Type": "String"
    }
  },
  "Conditions": {
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref"
            },
            "NONE"
          ]
        }
      ]
    },
    "ShouldUseServerSideEncryption": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnableServerSideEncryption"
        },
        "true"
      ]
    },
    "ShouldUsePayPerRequestBilling": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBBillingMode"
        },
        "PAY_PER_REQUEST"
      ]
    },
    "ShouldUsePointInTimeRecovery": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnablePointInTimeRecovery"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "ConvencoesRegulamentosTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "condominiosID",
            "AttributeType": "S"
          }
        ],
        "BillingMode": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            "PAY_PER_REQUEST",
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "byCondominios",
            "KeySchema": [
              {
                "AttributeName": "condominiosID",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "Fn::If": [
                "ShouldUsePayPerRequestBilling",
                {
                  "Ref": "AWS::NoValue"
                },
                {
                  "ReadCapacityUnits": {
                    "Ref": "DynamoDBModelTableReadIOPS"
                  },
                  "WriteCapacityUnits": {
                    "Ref": "DynamoDBModelTableWriteIOPS"
                  }
                }
              ]
            }
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "Fn::If": [
            "ShouldUsePointInTimeRecovery",
            {
              "PointInTimeRecoveryEnabled": true
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ProvisionedThroughput": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "ReadCapacityUnits": {
                "Ref": "DynamoDBModelTableReadIOPS"
              },
              "WriteCapacityUnits": {
                "Ref": "DynamoDBModelTableWriteIOPS"
              }
            }
          ]
        },
        "SSESpecification": {
          "SSEEnabled": {
            "Fn::If": [
              "ShouldUseServerSideEncryption",
              true,
              false
            ]
          }
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "TableName": {
          "Fn::Join": [
            "",
            [
              "ConvencoesRegulamentos-",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "-",
              {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref"
              }
            ]
          ]
        },
        "TimeToLiveSpecification": {
          "AttributeName": "_ttl",
          "Enabled": true
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "ConvencoesRegulamentosIAMRole7A56778B": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem",
                    "dynamodb:ConditionCheckItem",
                    "dynamodb:DescribeTable",
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "ConvencoesRegulamentos-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "ConvencoesRegulamentos-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "AmplifyDataStore-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "AmplifyDataStore-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBAccess"
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "ConvencoesRegulamentd92f7c-",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "-",
              {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref"
              }
            ]
          ]
        }
      }
    },
    "ConvencoesRegulamentosDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "DeltaSyncConfig": {
            "BaseTableTTL": "43200",
            "DeltaSyncTableName": {
              "Fn::Join": [
                "",
                [
                  "AmplifyDataStore-",
                  {
                    "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                  },
                  "-",
                  {
                    "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                  }
                ]
              ]
            },
            "DeltaSyncTableTTL": "30"
          },
          "TableName": {
            "Ref": "ConvencoesRegulamentosTable"
          },
          "Versioned": true
        },
        "Name": "ConvencoesRegulamentosTable",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosIAMRole7A56778B",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      },
      "DependsOn": [
        "ConvencoesRegulamentosIAMRole7A56778B"
      ]
    },
    "QueryGetConvencoesRegulamentosDataResolverFnQueryGetConvencoesRegulamentosDataResolverFnAppSyncFunction8F297EDF": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryGetConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.getConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.getConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "GetConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "getConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiosauth0FunctionQuerygetCondominiosauth0FunctionAppSyncFunction02C717DAFunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "QueryGetConvencoesRegulamentosDataResolverFnQueryGetConvencoesRegulamentosDataResolverFnAppSyncFunction8F297EDF",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"getConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    },
    "QueryListConvencoesRegulamentosDataResolverFnQueryListConvencoesRegulamentosDataResolverFnAppSyncFunction44A06E73": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryListConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.listConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.listConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "ListConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "listConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiosauth0FunctionQuerygetCondominiosauth0FunctionAppSyncFunction02C717DAFunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "QueryListConvencoesRegulamentosDataResolverFnQueryListConvencoesRegulamentosDataResolverFnAppSyncFunction44A06E73",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"listConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    },
    "QuerysyncConvencoesRegulamentospreAuth0FunctionQuerysyncConvencoesRegulamentospreAuth0FunctionAppSyncFunctionF939E499": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QuerysyncConvencoesRegulamentospreAuth0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.syncConvencoesRegulamentos.preAuth.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson({})"
      }
    },
    "QuerySyncConvencoesRegulamentosDataResolverFnQuerySyncConvencoesRegulamentosDataResolverFnAppSyncFunction0289FA53": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QuerySyncConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.syncConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.syncConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "SyncConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "syncConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerysyncConvencoesRegulamentospreAuth0FunctionQuerysyncConvencoesRegulamentospreAuth0FunctionAppSyncFunctionF939E499",
                "FunctionId"
              ]
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiosauth0FunctionQuerygetCondominiosauth0FunctionAppSyncFunction02C717DAFunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "QuerySyncConvencoesRegulamentosDataResolverFnQuerySyncConvencoesRegulamentosDataResolverFnAppSyncFunction0289FA53",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"syncConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    },
    "MutationCreateConvencoesRegulamentosDataResolverFnMutationCreateConvencoesRegulamentosDataResolverFnAppSyncFunction511D40F8": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationCreateConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.createConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.createConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "CreateConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "createConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationcreateCondominiosinit0FunctionMutationcreateCondominiosinit0FunctionAppSyncFunction4898ECD0FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationcreateCondominiosauth0FunctionMutationcreateCondominiosauth0FunctionAppSyncFunction3B2DF4CBFunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "MutationCreateConvencoesRegulamentosDataResolverFnMutationCreateConvencoesRegulamentosDataResolverFnAppSyncFunction511D40F8",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"createConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "MutationupdateConvencoesRegulamentosauth0FunctionMutationupdateConvencoesRegulamentosauth0FunctionAppSyncFunction312ECC5E": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationupdateConvencoesRegulamentosauth0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updateConvencoesRegulamentos.auth.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updateConvencoesRegulamentos.auth.1.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "MutationUpdateConvencoesRegulamentosDataResolverFnMutationUpdateConvencoesRegulamentosDataResolverFnAppSyncFunction222FD93A": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationUpdateConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updateConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updateConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "UpdateConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "updateConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosMutationupdateCondominiosinit0FunctionMutationupdateCondominiosinit0FunctionAppSyncFunction31BC2B04FunctionId"
            },
            {
              "Fn::GetAtt": [
                "MutationupdateConvencoesRegulamentosauth0FunctionMutationupdateConvencoesRegulamentosauth0FunctionAppSyncFunction312ECC5E",
                "FunctionId"
              ]
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "MutationUpdateConvencoesRegulamentosDataResolverFnMutationUpdateConvencoesRegulamentosDataResolverFnAppSyncFunction222FD93A",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"updateConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "MutationdeleteConvencoesRegulamentosauth0FunctionMutationdeleteConvencoesRegulamentosauth0FunctionAppSyncFunctionF6B60509": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationdeleteConvencoesRegulamentosauth0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deleteConvencoesRegulamentos.auth.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deleteConvencoesRegulamentos.auth.1.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "MutationDeleteConvencoesRegulamentosDataResolverFnMutationDeleteConvencoesRegulamentosDataResolverFnAppSyncFunction739C6BB2": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationDeleteConvencoesRegulamentosDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deleteConvencoesRegulamentos.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deleteConvencoesRegulamentos.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "DeleteConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "deleteConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "MutationdeleteConvencoesRegulamentosauth0FunctionMutationdeleteConvencoesRegulamentosauth0FunctionAppSyncFunctionF6B60509",
                "FunctionId"
              ]
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "MutationDeleteConvencoesRegulamentosDataResolverFnMutationDeleteConvencoesRegulamentosDataResolverFnAppSyncFunction739C6BB2",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"deleteConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "SubscriptiononCreateConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onCreateConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptiononCreateCondominiosauth0FunctionSubscriptiononCreateCondominiosauth0FunctionAppSyncFunctionFCB34236FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptionOnCreateCondominiosDataResolverFnSubscriptionOnCreateCondominiosDataResolverFnAppSyncFunctionA3249BCFFunctionId"
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onCreateConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    },
    "SubscriptiononUpdateConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onUpdateConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptiononCreateCondominiosauth0FunctionSubscriptiononCreateCondominiosauth0FunctionAppSyncFunctionFCB34236FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptionOnCreateCondominiosDataResolverFnSubscriptionOnCreateCondominiosDataResolverFnAppSyncFunctionA3249BCFFunctionId"
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onUpdateConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    },
    "SubscriptiononDeleteConvencoesRegulamentosResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onDeleteConvencoesRegulamentos",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptiononCreateCondominiosauth0FunctionSubscriptiononCreateCondominiosauth0FunctionAppSyncFunctionFCB34236FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosSubscriptionOnCreateCondominiosDataResolverFnSubscriptionOnCreateCondominiosDataResolverFnAppSyncFunctionA3249BCFFunctionId"
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onDeleteConvencoesRegulamentos\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    },
    "QueryConvencoesRegulamentosByCondominiosIDDataResolverFnQueryConvencoesRegulamentosByCondominiosIDDataResolverFnAppSyncFunctionC98DEBF0": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "ConvencoesRegulamentosDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryConvencoesRegulamentosByCondominiosIDDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.convencoesRegulamentosByCondominiosID.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.convencoesRegulamentosByCondominiosID.res.vtl"
            ]
          ]
        },
        "SyncConfig": {
          "ConflictDetection": "VERSION",
          "ConflictHandler": "AUTOMERGE"
        }
      },
      "DependsOn": [
        "ConvencoesRegulamentosDataSource"
      ]
    },
    "QueryconvencoesRegulamentosByCondominiosIDResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "convencoesRegulamentosByCondominiosID",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiosauth0FunctionQuerygetCondominiosauth0FunctionAppSyncFunction02C717DAFunctionId"
            },
            {
              "Ref": "referencetotransformerrootstackCondominiosNestedStackCondominiosNestedStackResourceD01D000DOutputstransformerrootstackCondominiosQuerygetCondominiospostAuth0FunctionQuerygetCondominiospostAuth0FunctionAppSyncFunctionB25E8F42FunctionId"
            },
            {
              "Fn::GetAtt": [
                "QueryConvencoesRegulamentosByCondominiosIDDataResolverFnQueryConvencoesRegulamentosByCondominiosIDDataResolverFnAppSyncFunctionC98DEBF0",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"convencoesRegulamentosByCondominiosID\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "ConvencoesRegulamentosTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"deltaSyncTableTtl\", 30))\n$util.qr($ctx.stash.put(\"authRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackauthRoleNameFB872D50Ref"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"unauthRole\", \"arn:aws:sts::",
              {
                "Ref": "AWS::AccountId"
              },
              ":assumed-role/",
              {
                "Ref": "referencetotransformerrootstackunauthRoleName49F3C1FERef"
              },
              "/CognitoIdentityCredentials\"))\n$util.qr($ctx.stash.put(\"adminRoles\", [\"us-west-2_SXdurZBVX_Full-access/CognitoIdentityCredentials\",\"us-west-2_SXdurZBVX_Manage-only/CognitoIdentityCredentials\"]))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    }
  },
  "Outputs": {
    "GetAttConvencoesRegulamentosTableStreamArn": {
      "Description": "Your DynamoDB table StreamArn.",
      "Value": {
        "Fn::GetAtt": [
          "ConvencoesRegulamentosTable",
          "StreamArn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:ConvencoesRegulamentosTable:StreamArn"
            ]
          ]
        }
      }
    },
    "GetAttConvencoesRegulamentosTableName": {
      "Description": "Your DynamoDB table name.",
      "Value": {
        "Ref": "ConvencoesRegulamentosTable"
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:ConvencoesRegulamentosTable:Name"
            ]
          ]
        }
      }
    },
    "GetAttConvencoesRegulamentosDataSourceName": {
      "Description": "Your model DataSource name.",
      "Value": {
        "Fn::GetAtt": [
          "ConvencoesRegulamentosDataSource",
          "Name"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:ConvencoesRegulamentosDataSource:Name"
            ]
          ]
        }
      }
    },
    "transformerrootstackConvencoesRegulamentosConvencoesRegulamentosDataSourceFA04EA06Name": {
      "Value": {
        "Fn::GetAtt": [
          "ConvencoesRegulamentosDataSource",
          "Name"
        ]
      }
    },
    "transformerrootstackConvencoesRegulamentosConvencoesRegulamentosTableB998D5DCRef": {
      "Value": {
        "Ref": "ConvencoesRegulamentosTable"
      }
    }
  }
}